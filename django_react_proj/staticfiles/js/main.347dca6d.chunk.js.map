{"version":3,"sources":["components/UserList/UserList.module.css","components/TaskLegend/TypesLegend.module.css","components/RealTime/RealTime.module.css","components/NewUserForm/NewUserForm.module.css","components/NewUserModal/NewUserModal.module.css","components/SummingTime/SummingTime.module.css","constants/index.js","components/RealTime/RealTime.js","components/Header/Header.js","components/TaskButtonModal/TaskButtonModal.js","components/NewUserForm/NewUserForm.js","components/NewUserModal/NewUserModal.js","components/ConfirmRemovalModal/ConfirmRemovalModal.js","components/UserList/UserList.js","components/TaskLegend/TaskType/TaskType.js","components/TaskLegend/TypesLegend.js","components/Home/Home.js","components/SummingTime/SummingTime.js","components/Settings/Settings.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","API_URL","Time","React","useState","time","setTime","currentCallback","date","Date","dateformat","format","useEffect","handle","setInterval","clearInterval","Content","Layout","PageHeader","className","style","padding","margin","Item","align","span","offset","width","src","styles","TaskButton","setDoneState","type","size","icon","CheckSquareOutlined","onClick","toast","info","NewUserForm","user","resetState","toggle","taskName","setTaskName","taskDescription","setTaskDescription","taskType","setTaskType","startTime","setStartTime","endTime","setEndTime","dateValue","value","createUser","event","a","preventDefault","axios","post","id","editUser","put","success","Form","onSubmit","FormGroup","Label","for","Input","name","onChange","target","Row","Col","disableClock","validateOnBlur","sm","map","Svg","Button","NewUserModal","create","modal","setModal","previous","title","button","EditOutlined","background","borderColor","Modal","isOpen","ModalHeader","ModalBody","ConfirmRemovalModal","deleteUser","isModalVisible","setIsModalVisible","handlerDeleteUser","error","console","log","DeleteFilled","visible","onOk","onCancel","cancelText","okText","okType","Column","Table","Actions","patch","done","delete","UserList","users","Mytable","pagination","position","dataSource","dataIndex","render","rowColor","ButtonTrue","Meeting","Email","Housework","height","TaskType","TaskLegend","types","Done","backgroundColor","classNames","TaskTypeCircle","getPreviousDay","getFullYear","getMonth","getDate","getNextDay","Home","getUserForView","setCurrentDate","currentDate","getUsers","modalFlag","setModalFlag","toDateString","substring","footer","fullscreen","toDate","Subtract","workHours","timevalue","forEach","uptimes","getTime","lowtimes","taskhours","Math","floor","taskminutes","configtasktime","appendPadding","data","angleField","colorField","radius","label","content","interactions","notDone","config","SumTim","WorkSettings","setworkHours","labelCol","wrapperCol","initialValues","remember","onFinish","onFinishFailed","min","max","defaultValue","number","htmlType","App","noTitleKey","setnoTitleKey","m","toString","padStart","y","d","filter","sort","userA","userB","localeCompare","setUsers","get","then","res","contentList","1","2","3","theme","mode","defaultSelectedKeys","key","selectedKeys","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.347dca6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Image\":\"UserList_Image__p0wTj\",\"Center\":\"UserList_Center__1Xx8G\",\"Svg\":\"UserList_Svg__3wabR\",\"RowDone\":\"UserList_RowDone__1KbxV\",\"ButtonTrue\":\"UserList_ButtonTrue__1-i-9\",\"ButtonFalse\":\"UserList_ButtonFalse__3a_X-\",\"Meeting\":\"UserList_Meeting__1HsUg\",\"Email\":\"UserList_Email__Q8Sdm\",\"Housework\":\"UserList_Housework__28ZYo\",\"Mytable\":\"UserList_Mytable__2gVrP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskTypeCircle\":\"TypesLegend_TaskTypeCircle__1Ylte\",\"Done\":\"TypesLegend_Done__22h-1\",\"Meeting\":\"TypesLegend_Meeting__56SU7\",\"Email\":\"TypesLegend_Email__3DKi5\",\"Housework\":\"TypesLegend_Housework__1Qz7U\",\"col-sm-2\":\"TypesLegend_col-sm-2__2fTWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Time\":\"RealTime_Time__3WgPL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Svg\":\"NewUserForm_Svg__2YASK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"NewUserModal_button__3HrVt\",\"edit\":\"NewUserModal_edit__1GKSC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SumTime\":\"SummingTime_SumTime__3SrmV\"};","export const API_URL = '/api/users/';\n","import React from 'react';\nimport { format } from 'date-fns';\n\nconst Time = () => {\n  const [time, setTime] = React.useState(0);\n  const currentCallback = () => {\n    const date = new Date();\n    const dateformat = format(date, 'HH:mm');\n    setTime(dateformat);\n  };\n  React.useEffect(() => {\n    const handle = setInterval(currentCallback, 1000);\n    return () => clearInterval(handle);\n  }, []);\n  return time;\n};\n\nexport default Time;\n","import React from 'react';\nimport 'antd/dist/antd.css';\nimport './Header.css';\nimport { Col, Row, Image, Layout, Breadcrumb } from 'antd';\nimport Time from '../RealTime/RealTime';\nimport styles from '../RealTime/RealTime.module.css';\n\nconst { Content } = Layout;\nconst PageHeader = () => (\n  <Layout className=\"layout\">\n    <Content style={{ padding: '0 50px' }}>\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item>Home</Breadcrumb.Item>\n        <Breadcrumb.Item>List</Breadcrumb.Item>\n        <Breadcrumb.Item>App</Breadcrumb.Item>\n      </Breadcrumb>\n      <Row align=\"middle\">\n        <Col span={10} offset={7} className=\"Center\">\n          <Image\n            width={400}\n            src=\"https://media.discordapp.net/attachments/821426521859162192/821456504875646976/teams-chaos.png?width=800&height=450\"\n          />\n        </Col>\n        <Col className={styles.Time} span={2} offset={1}>\n          <Time />\n        </Col>\n      </Row>\n    </Content>\n  </Layout>\n);\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'antd/lib/button';\nimport { CheckSquareOutlined } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst TaskButton = ({ setDoneState }) => (\n  <>\n    <Button\n      type=\"primary\"\n      size=\"middle\"\n      icon={<CheckSquareOutlined />}\n      onClick={() => {\n        setDoneState();\n        toast.info('YOU SWITCHED STATE OF TASK!');\n      }}\n    >\n      <ToastContainer />\n    </Button>\n  </>\n);\nTaskButton.propTypes = {\n  setDoneState: PropTypes.func,\n};\nexport default TaskButton;\n","import { React, useState } from 'react';\nimport { Col, Row, Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from 'axios';\nimport DateTimePicker from 'react-datetime-picker';\nimport PropTypes from 'prop-types';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { API_URL } from '../../constants';\nimport styles from './NewUserForm.module.css';\n\nconst NewUserForm = ({ user, resetState, toggle }) => {\n  const [taskName, setTaskName] = useState(user?.taskName || '');\n  const [taskDescription, setTaskDescription] = useState(user?.taskDescription || '');\n  const [taskType, setTaskType] = useState(user?.taskType || '');\n  const [startTime, setStartTime] = useState(user?.startTime || '');\n  const [endTime, setEndTime] = useState(user?.endTime || '');\n  const types = ['', 'Meeting', 'Email', 'Housework'];\n  const onTaskNameChange = (event) => {\n    setTaskName(event.target.value);\n  };\n  const onTaskDescriptionChange = (event) => {\n    setTaskDescription(event.target.value);\n  };\n  const onTaskTypeChange = (event) => {\n    setTaskType(event.target.value);\n  };\n\n  const dateValue = (value) => (typeof value === 'string' ? new Date(value) : value);\n  const createUser = async (event) => {\n    event.preventDefault();\n    await axios.post(API_URL, {\n      id: user?.id,\n      taskName,\n      taskDescription,\n      taskType,\n      startTime,\n      endTime,\n    });\n    resetState();\n    toggle();\n  };\n  const editUser = async (event) => {\n    event.preventDefault();\n    await axios.put(`${API_URL + user.id}/`, {\n      id: user.id,\n      taskName,\n      taskDescription,\n      taskType,\n      startTime,\n      endTime,\n    });\n    resetState();\n    toggle();\n    toast.success('YOU EDITED TASK!');\n  };\n  return (\n    <Form onSubmit={user ? editUser : createUser}>\n      <FormGroup>\n        <Label for=\"taskName\">Task name:</Label>\n        <Input type=\"text\" name=\"taskName\" onChange={onTaskNameChange} value={taskName} />\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"startTime\">Time interval:</Label>\n        <FormGroup>\n          <Row>\n            <Col>\n              <Label>From:</Label>\n              <FormGroup>\n                <DateTimePicker\n                  name=\"startTime\"\n                  disableClock=\"true\"\n                  format=\"y-M-d HH:mm\"\n                  validateOnBlur=\"false\"\n                  onChange={setStartTime}\n                  value={user ? dateValue(startTime) : startTime}\n                />\n              </FormGroup>\n              <Label>To:</Label>\n              <FormGroup>\n                <DateTimePicker\n                  name=\"endTime\"\n                  disableClock=\"true\"\n                  format=\"y-M-d HH:mm\"\n                  onChange={setEndTime}\n                  value={user ? dateValue(endTime) : endTime}\n                />\n              </FormGroup>\n            </Col>\n            <Col sm={7}>\n              <Input type=\"select\" onChange={onTaskTypeChange} value={taskType}>\n                {types.map((type) => (\n                  <option key={type} name=\"taskType\">\n                    {type}\n                  </option>\n                ))}\n              </Input>\n            </Col>\n          </Row>\n        </FormGroup>\n      </FormGroup>\n      <FormGroup>\n        <Label for=\"password\">Description:</Label>\n        <textarea\n          className={styles.Svg}\n          type=\"text\"\n          name=\"taskDescription\"\n          onChange={onTaskDescriptionChange}\n          value={taskDescription}\n        />\n      </FormGroup>\n      <Button>\n        Zapisz\n        <ToastContainer />\n      </Button>\n    </Form>\n  );\n};\n\nNewUserForm.propTypes = {\n  toggle: PropTypes.func,\n  user: PropTypes.object,\n  resetState: PropTypes.func,\n};\nexport default NewUserForm;\n","import React, { useState } from 'react';\nimport { Modal, ModalHeader, ModalBody } from 'reactstrap';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\nimport 'antd/dist/antd.css';\nimport { EditOutlined } from '@ant-design/icons';\nimport NewUserForm from '../NewUserForm/NewUserForm';\nimport styles from './NewUserModal.module.css';\n\nconst NewUserModal = ({ resetState, user, create }) => {\n  const [modal, setModal] = useState();\n  const toggle = () => {\n    setModal((previous) => !previous);\n  };\n  let title = 'Edit task';\n  let button = (\n    <Button\n      type=\"primary\"\n      icon={<EditOutlined />}\n      style={{ background: 'green', borderColor: 'green' }}\n      onClick={toggle}\n    />\n  );\n\n  if (create) {\n    title = 'Create new task';\n\n    button = (\n      <button className={styles.button} type=\"button\" onClick={toggle}>\n        Create new task\n      </button>\n    );\n  }\n\n  return (\n    <>\n      {button}\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{title} </ModalHeader>\n\n        <ModalBody>\n          <NewUserForm resetState={resetState} toggle={toggle} user={user} />\n        </ModalBody>\n      </Modal>\n    </>\n  );\n};\nNewUserModal.propTypes = {\n  user: PropTypes.object,\n  resetState: PropTypes.func,\n  create: PropTypes.bool,\n};\nexport default NewUserModal;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal, Button } from 'antd';\nimport { DeleteFilled } from '@ant-design/icons';\nimport 'antd/dist/antd.css';\nimport { toast } from 'react-toastify';\n\nconst ConfirmRemovalModal = ({ id, deleteUser }) => {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const toggleT = () => {\n    setIsModalVisible((previous) => !previous);\n    toast.error('YOU DELETED TASK!');\n  };\n  const handlerDeleteUser = async (id) => {\n    try {\n      await deleteUser(id);\n      toggleT();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n  return (\n    <>\n      <Button type=\"danger\" icon={<DeleteFilled />} onClick={showModal} />\n      <Modal\n        title=\"Do you want to delete task?\"\n        visible={isModalVisible}\n        onOk={() => handlerDeleteUser(id)}\n        onCancel={handleCancel}\n        cancelText=\"No\"\n        okText=\"Yes\"\n        okType=\"danger\"\n      />\n    </>\n  );\n};\nConfirmRemovalModal.propTypes = {\n  id: PropTypes.number,\n  deleteUser: PropTypes.func,\n};\nexport default ConfirmRemovalModal;\n","import React from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport { Table } from 'antd';\nimport { format } from 'date-fns';\nimport TaskButton from '../TaskButtonModal/TaskButtonModal';\nimport NewUserModal from '../NewUserModal/NewUserModal';\nimport ConfirmRemovalModal from '../ConfirmRemovalModal/ConfirmRemovalModal';\nimport { API_URL } from '../../constants';\nimport styles from './UserList.module.css';\n\nconst { Column } = Table;\n\nconst Actions = ({ user, resetState }) => {\n  const setDoneState = async () => {\n    await axios.patch(`${API_URL + user.id}/`, {\n      done: !user.done,\n    });\n    resetState();\n  };\n\n  const deleteUser = async (id) => {\n    try {\n      await axios.delete(`${API_URL}${id}/`);\n      resetState();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <>\n      <TaskButton setDoneState={setDoneState} />\n      <NewUserModal create={false} user={user} resetState={resetState} />\n      <ConfirmRemovalModal id={user.id} deleteUser={deleteUser} />\n    </>\n  );\n};\n\nconst UserList = ({ users = [], resetState }) => (\n  <div className={styles.Mytable}>\n    <Table pagination={{ position: ['none', 'none'] }} dataSource={users}>\n      <Column title=\"Task name\" dataIndex=\"taskName\" />\n      <Column title=\"Description\" dataIndex=\"taskDescription\" />\n      <Column\n        title=\"Task Time\"\n        dataIndex=\"taskName\"\n        render={(value, user) =>\n          `${format(new Date(user.startTime), 'HH:mm')} - ${format(\n            new Date(user.endTime),\n            'HH:mm'\n          )}`\n        }\n      />\n      <Column\n        title=\"Task type\"\n        dataIndex=\"taskType\"\n        render={(taskType, user) => {\n          let rowColor = '';\n\n          if (user.done) {\n            rowColor = styles.ButtonTrue;\n          } else {\n            if (taskType === 'Meeting') {\n              rowColor = styles.Meeting;\n            }\n            if (taskType === 'Email') {\n              rowColor = styles.Email;\n            }\n            if (taskType === 'Housework') {\n              rowColor = styles.Housework;\n            }\n          }\n\n          return <div style={{ height: '30px', width: '30px' }} className={rowColor} />;\n        }}\n      />\n      <Column title=\"\" render={(value, user) => <Actions user={user} resetState={resetState} />} />\n    </Table>\n  </div>\n);\n\nActions.propTypes = {\n  user: PropTypes.object,\n  resetState: PropTypes.func,\n};\nUserList.propTypes = {\n  users: PropTypes.array,\n  resetState: PropTypes.func,\n};\nexport default UserList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row } from 'reactstrap';\n\nconst TaskType = ({ type, className }) => (\n  <Row>\n    <div className={className} />\n    <tr>{type}</tr>\n  </Row>\n);\n\nTaskType.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.any,\n};\n\nexport default TaskType;\n","import React from 'react';\nimport { Card } from 'antd';\nimport classNames from 'classnames';\nimport TaskType from './TaskType/TaskType';\nimport styles from './TypesLegend.module.css';\nimport 'antd/dist/antd.css';\n\nconst TaskLegend = () => {\n  const types = [\n    {\n      type: 'Done',\n      style: styles.Done,\n    },\n    {\n      type: 'Meeting',\n      style: styles.Meeting,\n    },\n    {\n      type: 'Email',\n      style: styles.Email,\n    },\n    {\n      type: 'Housework',\n      style: styles.Housework,\n    },\n  ];\n  return (\n    <>\n      <Card title=\"Legend\" style={{ width: 300, backgroundColor: '#bfbfbf' }}>\n        {types.map((type) => (\n          <TaskType\n            key={type.type}\n            type={type.type}\n            className={classNames(styles.TaskTypeCircle, type.style)}\n          />\n        ))}\n      </Card>\n    </>\n  );\n};\n\nexport default TaskLegend;\n","import React, { useState } from 'react';\nimport { Button, Modal, Col, Row, Card, Calendar } from 'antd';\nimport 'antd/dist/antd.css';\nimport PropTypes from 'prop-types';\nimport UserList from '../UserList/UserList';\nimport NewUserModal from '../NewUserModal/NewUserModal';\nimport TaskLegend from '../TaskLegend/TypesLegend';\n\nconst getPreviousDay = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate() - 1);\nconst getNextDay = (date) => new Date(date.getFullYear(), date.getMonth(), date.getDate() + 1);\n\nconst Home = ({ getUserForView, setCurrentDate, currentDate, users, getUsers }) => {\n  const [modalFlag, setModalFlag] = useState(false);\n  const toggle = () => {\n    setModalFlag((previous) => !previous);\n  };\n  const button = <Button onClick={toggle}>Calendar</Button>;\n  return (\n    <Card>\n      <Row>\n        <Col span={4} offset={5}>\n          <Button type=\"button\" onClick={() => setCurrentDate(getPreviousDay)}>\n            Previous day\n          </Button>\n        </Col>\n        <Col span={4}>\n          <Button type=\"button\" onClick={() => setCurrentDate(new Date())}>\n            {new Date().toDateString().substring(3, 10)}\n          </Button>\n        </Col>\n        <Col span={4}>\n          <Button type=\"button\" onClick={() => setCurrentDate(getNextDay)}>\n            Next day\n          </Button>\n        </Col>\n        <Col span={4}>\n          {button}\n          <Modal visible={modalFlag} footer={null} onCancel={toggle}>\n            <Calendar fullscreen={false} onChange={(date) => setCurrentDate(date.toDate())} />\n          </Modal>\n        </Col>\n        <Col>{currentDate.toDateString()}</Col>\n      </Row>\n      <Row>\n        <Col span={16} offset={4}>\n          <UserList users={getUserForView(users, currentDate)} resetState={getUsers} />\n        </Col>\n      </Row>\n      <Row>\n        <Col offset={17}>\n          <NewUserModal create resetState={getUsers} />\n        </Col>\n      </Row>\n      <Col offset={4}>\n        <TaskLegend />\n      </Col>\n    </Card>\n  );\n};\nHome.propTypes = {\n  getUserForView: PropTypes.func,\n  setCurrentDate: PropTypes.func,\n  currentDate: PropTypes.any,\n  users: PropTypes.array,\n  getUsers: PropTypes.func,\n};\nexport default Home;\n","import { Pie } from '@ant-design/charts';\nimport { Card, Col, Row } from 'antd';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './SummingTime.module.css';\n\nconst Subtract = ({ users, workHours }) => {\n  let timevalue = 0;\n  if (users) {\n    users.forEach((user) => {\n      const uptimes = new Date(user.endTime).getTime();\n      const lowtimes = new Date(user.startTime).getTime();\n      const sub = uptimes - lowtimes;\n      const minutes = sub / 60000;\n      timevalue += minutes;\n    });\n  }\n  const taskhours = Math.floor(timevalue / 60);\n  const taskminutes = timevalue % 60;\n  const substrpiechart = workHours * 60 - timevalue;\n  const datatasktime = [\n    {\n      type: 'Planned Time',\n      value: timevalue,\n    },\n    {\n      type: 'Free Time',\n      value: substrpiechart,\n    },\n  ];\n  const configtasktime = {\n    appendPadding: 10,\n    data: datatasktime,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 0.6,\n    label: {\n      type: 'spider',\n      content: '{percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n  };\n  let done = 0;\n  let notDone = 0;\n\n  if (users) {\n    users.forEach((user) => {\n      if (user.done === true) {\n        done += 1;\n      } else {\n        notDone += 1;\n      }\n    });\n  }\n  const datatask = [\n    {\n      type: 'Task Done',\n      value: done,\n    },\n    {\n      type: 'Task Not Done',\n      value: notDone,\n    },\n  ];\n  const config = {\n    appendPadding: 10,\n    data: datatask,\n    angleField: 'value',\n    colorField: 'type',\n    radius: 0.6,\n    label: {\n      type: 'spider',\n      content: '{percentage}',\n    },\n    interactions: [{ type: 'element-active' }],\n  };\n  return (\n    <>\n      <Row>\n        <Col className={styles.SumTim} span={6} offset={10}>\n          Total time of tasks on this day: {taskhours} hours {taskminutes} minutes\n        </Col>\n      </Row>\n      <Row>\n        <Col span={4} offset={4}>\n          <Card title=\"Pie chart of scheduled time to free time\" style={{ width: 500 }}>\n            <Pie {...configtasktime} />\n          </Card>\n        </Col>\n        <Col span={4} offset={5}>\n          <Card title=\"Pie chart of task done to task not done\" style={{ width: 500 }}>\n            <Pie {...config} />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\nSubtract.propTypes = {\n  users: PropTypes.array,\n  workHours: PropTypes.number,\n};\nexport default Subtract;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Form, InputNumber, Button } from 'antd';\n\nconst WorkSettings = ({ workHours, setworkHours }) => {\n  const onChange = (number) => {\n    setworkHours(number);\n    console.log(number);\n  };\n  const layout = {\n    labelCol: { span: 12 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 14, span: 16 },\n  };\n  const onFinish = (value) => {\n    console.log('Success:', value);\n  };\n\n  const onFinishFailed = (error) => {\n    console.log('Failed:', error);\n  };\n  return (\n    <Form\n      {...layout}\n      name=\"basic\"\n      initialValues={{ remember: true }}\n      onFinish={onFinish}\n      onFinishFailed={onFinishFailed}\n    >\n      <Form.Item label=\"Set work hours:\">\n        <InputNumber min={1} max={24} defaultValue={workHours} onChange={onChange} />\n      </Form.Item>\n      <Form.Item {...tailLayout}>\n        <Button type=\"primary\" htmlType=\"submit\">\n          Submit\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\nWorkSettings.propTypes = {\n  setworkHours: PropTypes.func,\n  workHours: PropTypes.number,\n};\nexport default WorkSettings;\n","import React, { useState, useEffect } from 'react';\nimport { Card, Menu } from 'antd';\nimport { format } from 'date-fns';\nimport axios from 'axios';\nimport { API_URL } from './constants';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Subtract from './components/SummingTime/SummingTime';\nimport WorkSettings from './components/Settings/Settings';\n\nconst App = () => {\n  const [noTitleKey, setnoTitleKey] = useState('1');\n  const handleClick = (event) => {\n    setnoTitleKey(event.key);\n  };\n  const getUserForView = (users = [], date = new Date()) => {\n    const m = (date.getMonth() + 1).toString().padStart(2, '0');\n    const y = date.getFullYear();\n    const d = date.getDate().toString().padStart(2, '0');\n    return users\n      .filter((user) => format(new Date(user.startTime), 'yyyy-MM-dd') === `${y}-${m}-${d}`)\n      .sort((userA, userB) => userA.startTime.localeCompare(userB.startTime));\n  };\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [workHours, setworkHours] = useState(8);\n  const [users, setUsers] = useState();\n  const getUsers = () => {\n    axios.get(API_URL).then((res) => setUsers(res.data));\n  };\n  useEffect(() => {\n    getUsers();\n  }, []);\n  const contentList = {\n    1: (\n      <Home\n        getUserForView={getUserForView}\n        setCurrentDate={setCurrentDate}\n        currentDate={currentDate}\n        getUsers={getUsers}\n        users={users}\n      />\n    ),\n    2: <Subtract users={getUserForView(users, currentDate)} workHours={workHours} />,\n    3: <WorkSettings setworkHours={setworkHours} workHours={workHours} />,\n  };\n  return (\n    <>\n      <div />\n      <Menu\n        theme=\"dark\"\n        mode=\"horizontal\"\n        defaultSelectedKeys={['2']}\n        onClick={handleClick}\n        selectedKeys={noTitleKey}\n      >\n        <Menu.Item key=\"1\">DailyPlanner</Menu.Item>\n        <Menu.Item key=\"2\">Chart</Menu.Item>\n        <Menu.Item key=\"3\">Settings</Menu.Item>\n      </Menu>\n      <Header />\n      <Card>{contentList[noTitleKey]}</Card>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nreportWebVitals();\n\nexport default ReactDOM;\n"],"sourceRoot":""}